
 #####    ####   #    #  #####    ####  
 #    #  #    #  ##  ##  #    #  #      
 #####   #    #  # ## #  #####    ####  
 #    #  #    #  #    #  #    #       # 
 #    #  #    #  #    #  #    #  #    # 
 #####    ####   #    #  #####    ####  

sp_air_bouncing_bomb = {
	specialization = specialization_air 	
	icon = GFX_sp_air_bouncing_bomb

	project_tags = {
		sp_tag_aircraft
		sp_tag_bomb
	}

	allowed = {
		has_dlc = "Gotterdammerung"		
	}

	available = { 
		# FROM is country 
		# THIS/ROOT is project
		if = {
			limit = {
				has_dlc = "By Blood Alone"
			}
			FROM = {
				has_tech = heavy_bombs
			}
		}
		else = {
			OR = {
				FROM = { has_tech = tactical_bomber2 }
				FROM = { has_tech = strategic_bomber2 }
			}
		}

	}

	breakthrough_cost = {
		specialization_air = 1
	}
	
	prototype_time = sp_time.prototype.medium	

	complexity = sp_complexity.medium 

	project_output = {
		country_effects = {
			custom_effect_tooltip = sp_air_bouncing_bomb_completion_tt
		
		}
		facility_state_effects = {
			
		}
		scientist_effects = {
			
		}
		enable_equipments = {
			
		}
		enable_equipment_modules = {
			limit = { has_dlc = "By Blood Alone" }
			bouncing_bomb_release
		}
		
	}

	empty_reward_weight = {
		base = 0.0
	}

	generic_prototype_rewards = {
		sp_air_scientist_xp_generic_reward
		sp_air_political_interference_generic_reward
		sp_air_generic_major_breakthrough_reward
		sp_air_generic_aerodynamics_advancements_reward
	}

	unique_prototype_rewards = {
		sp_air_bouncing_bomb_backspin_mechanism_reward = {
			fire_only_once = yes
			
			threshold = { 
				min = 0
				max = 80
			}
			
			weight = {
				base = 1
			}
			
			option = {
				token = sp_air_bouncing_bomb_backspin_mechanism_reward_option
						
				iteration_output = {
					country_effects = {
						FROM = { add_project_progress_ratio = constant:sp_progress.gain.medium }
					}
					scientist_effects = {
						add_scientist_xp = {
							experience = constant:sp_scientist_xp_gain.high
							specialization = specialization_air 
						}
					}
				}
			}
		}
		sp_air_bouncing_bomb_training_accidents_reward = {
			fire_only_once = yes
			
			threshold = { 
				min = 0
				max = 80
			}
			
			weight = {
				base = 1
			}
			
			option = {
				token = sp_air_bouncing_bomb_training_accidents_reward_option
						
				iteration_output = {
					country_effects = {
						FROM = { add_project_progress_ratio = -0.02 }
						FROM = { air_experience = 25 }
					}
				}
			}
		}

		sp_air_bouncing_bomb_type_of_explosives_reward = {
			fire_only_once = yes
			
			threshold = { 
				min = 0
				max = 80
			}
			
			weight = {
				base = 1
			}
			
			option = {
				token = sp_air_bouncing_bomb_type_of_explosives_reward_option
						
				iteration_output = {
					#country_effects = {
					#	FROM = { add_project_progress_ratio = 0.10 }
					#}
					scientist_effects = {
						add_scientist_xp = {
							experience = constant:sp_scientist_xp_gain.high
							specialization = specialization_air 
						}
					}
				}
			}
		}


		sp_air_bouncing_bomb_aircraft_modifications_reward = {
			fire_only_once = yes
			
			threshold = { 
				min = 0
				max = 80
			}
			
			weight = {
				base = 1
			}
			
			option = {
				token = sp_air_bouncing_bomb_aircraft_modifications_reward_option
						
				iteration_output = {
					country_effects = {
						FROM = { add_project_progress_ratio = constant:sp_progress.gain.low }
						FROM = { air_experience = 5 }
					}
				}
			}
		}
	}


}


sp_air_earthshaker_bomb = {
	specialization = specialization_air 	
	icon = GFX_sp_air_earthshaker_bomb

	project_tags = {
		sp_tag_aircraft
		sp_tag_bomb
	}

	allowed = {
		has_dlc = "Gotterdammerung"		
	}

	available = { 

		if = {
			limit = { has_dlc = "By Blood Alone" }
			FROM = {
				has_tech = heavy_bombs
			}
		}
		else = {
			FROM = {
				has_tech = strategic_bomber2
			}
		}

	}
	
	prototype_time = sp_time.prototype.long

	complexity = sp_complexity.medium

	project_output = {
		country_effects = {
			custom_effect_tooltip = sp_air_earthshaker_bomb_completion_tt
		
		}
		facility_state_effects = {
			
		}
		scientist_effects = {
			
		}
		enable_equipments = {
			
		}
		enable_equipment_modules = {
			limit = { has_dlc = "By Blood Alone" }
			earthshaker_bomb_release
		}
		
	}

	empty_reward_weight = {
		base = 0.0
	}

	generic_prototype_rewards = {
		sp_air_scientist_xp_generic_reward
		sp_air_political_interference_generic_reward
		sp_air_generic_major_breakthrough_reward
		sp_air_generic_aerodynamics_advancements_reward
	}
	unique_prototype_rewards = {
	}
}




   ##    #  #####    ####   #####     ##    ######  ##### 
  #  #   #  #    #  #    #  #    #   #  #   #         #   
 #    #  #  #    #  #       #    #  #    #  #####     #   
 ######  #  #####   #       #####   ######  #         #   
 #    #  #  #   #   #    #  #   #   #    #  #         #   
 #    #  #  #    #   ####   #    #  #    #  #         #   


sp_air_intercontinental_bomber = {
	specialization = specialization_air 	
	icon = GFX_sp_air_intercontinental_bomber

	project_tags = sp_tag_aircraft

	allowed = {
		has_dlc = "Gotterdammerung"	
	}

	available = { 
		FROM = {
			has_tech = improved_large_airframe
		}
	}

	breakthrough_cost = {
		specialization_air = 2
	}
	
	prototype_time = sp_time.prototype.very_long

	complexity = sp_complexity.large

	project_output = {
		enable_equipments = {
			#strat_bomber_intercontinental_equipment_1 
		}		
	}

	empty_reward_weight = {
		base = 0.0
	}

	generic_prototype_rewards = {
		sp_air_scientist_xp_generic_reward
		sp_air_political_interference_generic_reward
		sp_air_generic_major_breakthrough_reward
		sp_air_generic_aerodynamics_advancements_reward
	}
	unique_prototype_rewards = {
	}
}

sp_air_mothership_aircraft = {
	specialization = specialization_air 	
	icon = GFX_sp_air_mothership_aircraft

	project_tags = sp_tag_aircraft

	complexity = sp_complexity.medium 

	allowed = {
		
	}

	generic_prototype_rewards = {
		sp_air_scientist_xp_generic_reward
		sp_air_political_interference_generic_reward
		sp_air_generic_major_breakthrough_reward
		sp_air_generic_aerodynamics_advancements_reward
	}
	available = { 

		if = {
			limit = {
				has_dlc = "By Blood Alone"
			}
			FROM = {
				has_tech = improved_large_airframe
			}
		}
		else = {
			FROM = { 
				has_tech = strategic_bomber2
			}
		}

	}
	
	prototype_time = sp_time.prototype.long

	project_output = {
		country_effects = {
			custom_effect_tooltip = {
				localization_key = SP_UNLOCK_TECH
				TECH = mothership
			}
			custom_effect_tooltip = {
				localization_key = SP_UNLOCK_TECH
				TECH = reinforced_wings_mothership
			}
			custom_effect_tooltip = {
				localization_key = SP_UNLOCK_TECH
				TECH = miniature_fighters
			}


			custom_effect_tooltip = {
				localization_key = SP_UNLOCK_TECH
				TECH = aerial_hangars
			}

			hidden_effect = {
				set_technology = {
					var:mothership = 1
					popup = no
				}
			}
			mark_technology_tree_layout_dirty = yes


		
		}		
	}

	empty_reward_weight = {
		base = 0.0
	}

	generic_prototype_rewards = {
		sp_air_scientist_xp_generic_reward
		sp_air_political_interference_generic_reward
		sp_air_generic_major_breakthrough_reward
		sp_air_generic_aerodynamics_advancements_reward
	}
	unique_prototype_rewards = {
	}
}



      #  ######  #####   ####  
      #  #         #    #      
      #  #####     #     ####  
      #  #         #         # 
 #    #  #         #    #    # 
  ####   ######    #     ####  



sp_air_jet_engine = {
	specialization = specialization_air 	
	icon = GFX_sp_air_jet_engine

	project_tags = {
		sp_tag_aircraft
		sp_tag_jet
	}

	allowed = {
		has_dlc = "Gotterdammerung"	
	}

	available = { 
		FROM = {
			if = {
				limit = { has_dlc = "By Blood Alone" }
				has_tech = engines_2
			}
			else = {
				OR = {
					has_tech = CAS1
					has_tech = fighter1
					has_tech = naval_bomber1
					has_tech = heavy_fighter1
					has_tech = tactical_bomber1
					has_tech = strategic_bomber1
				}
			}
	 		
		}
	}
	
	breakthrough_cost = {
		specialization_air = 3
	}

	prototype_time = sp_time.prototype.long

	complexity = sp_complexity.large

	project_output = {

		country_effects = {
			if = {
				limit = { has_dlc = "By Blood Alone" }
			
				custom_effect_tooltip = {
					localization_key = SP_UNLOCK_TECH
					TECH = sp_centrifugal_jet_tech
				}
			}
			else = {
				custom_effect_tooltip = {
					localization_key = SP_UNLOCK_TECH
					TECH = jet_fighter_equipment_1
				}
			}
			mark_technology_tree_layout_dirty = yes
		}		

		enable_equipment_modules = {
			limit = { has_dlc = "By Blood Alone"}
			tank_gas_turbine_engine
			jet_engine_1x
			jet_engine_2x
			jet_engine_3x
			jet_engine_4x
			jet_engine_6x
		}

		enable_equipments = {
			limit = { NOT = { has_dlc = "By Blood Alone" } }
			jet_fighter_equipment_1
		}

	}

	empty_reward_weight = {
		base = 0.0
	}

	generic_prototype_rewards = {
		sp_air_scientist_xp_generic_reward
		sp_air_political_interference_generic_reward
		sp_air_generic_major_breakthrough_reward
		sp_air_generic_aerodynamics_advancements_reward
	}
	unique_prototype_rewards = {
	}
}

sp_air_axial_jet_engine = {
	specialization = specialization_air 	
	icon = GFX_sp_air_axial_jet_engine

	project_tags = {
		sp_tag_aircraft
		sp_tag_jet
	}

	allowed = {
		has_dlc = "Gotterdammerung"	
	}

	special_project_parent = {
		sp_air_jet_engine
	}

	available = { 
	}
	
	breakthrough_cost = {
		specialization_air = 2
	}

	prototype_time = sp_time.prototype.long

	complexity = sp_complexity.large

	project_output = {
		country_effects = {
			if = {
				limit = { has_dlc = "By Blood Alone" }
				custom_effect_tooltip = {
					localization_key = SP_UNLOCK_TECH
					TECH = modern_small_airframe
				}
				custom_effect_tooltip = {
					localization_key = SP_UNLOCK_TECH
					TECH = modern_medium_airframe
				}
				custom_effect_tooltip = {
					localization_key = SP_UNLOCK_TECH
					TECH = modern_large_airframe
				}
			}
			else = {
				custom_effect_tooltip = {
					localization_key = SP_UNLOCK_TECH
					TECH = jet_fighter_equipment_2
				}
			}

			mark_technology_tree_layout_dirty = yes
		}		

		enable_equipment_modules = {
			limit = { has_dlc = "By Blood Alone"}
			#jet_engine_axial_1x
			#jet_engine_axial_2x
			#jet_engine_axial_3x
			#jet_engine_axial_4x
			#jet_engine_axial_6x
		}

		enable_equipments = {
			limit = { NOT = { has_dlc = "By Blood Alone" } }
			jet_fighter_equipment_2
		}
	}

	empty_reward_weight = {
		base = 0.0
	}

	generic_prototype_rewards = {
		sp_air_scientist_xp_generic_reward
		sp_air_political_interference_generic_reward
		sp_air_generic_major_breakthrough_reward
		sp_air_generic_aerodynamics_advancements_reward
	}
	unique_prototype_rewards = {
	}
}

sp_air_supersonic_jet = {
	specialization = specialization_air 	
	icon = GFX_PLACEHOLDER_sp_project_icon

	project_tags = {
		sp_tag_aircraft
		sp_tag_jet
	}

	special_project_parent = {
		sp_air_axial_jet_engine
	}

	complexity = sp_complexity.large

	allowed = {
		
	}
	available = {
	}
	
	prototype_time = sp_time.prototype.medium

	project_output = {
		country_effects = {
			if = {
				limit = {
					has_dlc = "By Blood Alone"
				}
				custom_effect_tooltip = {
					localization_key = SP_UNLOCK_TECH
					TECH = supersonic_small_airframe
				}
			}
			else = {
				custom_effect_tooltip = {
					localization_key = SP_UNLOCK_TECH
					TECH = supersonic_fighter1
				}
			}

			mark_technology_tree_layout_dirty = yes
		}	

		enable_equipments = {
			limit = {
				has_dlc = "By Blood Alone"
			}
			#small_plane_airframe_5 
		}

		enable_equipments = {
			limit = {
				NOT = { has_dlc = "By Blood Alone" }
			}
			#supersonic_fighter_equipment_1 
		}	
	}



	empty_reward_weight = {
		base = 0.0
	}

	generic_prototype_rewards = {
		sp_air_scientist_xp_generic_reward
		sp_air_political_interference_generic_reward
		sp_air_generic_major_breakthrough_reward
		sp_air_generic_aerodynamics_advancements_reward
	}
	unique_prototype_rewards = {
	}
}






 #    #  ######  #       #   ####    ####   #####   #####  ######  #####  
 #    #  #       #       #  #    #  #    #  #    #    #    #       #    # 
 ######  #####   #       #  #       #    #  #    #    #    #####   #    # 
 #    #  #       #       #  #       #    #  #####     #    #       #####  
 #    #  #       #       #  #    #  #    #  #         #    #       #   #  
 #    #  ######  ######  #   ####    ####   #         #    ######  #    # 



sp_air_helicopter = {
	specialization = specialization_air 	
	icon = GFX_sp_air_helicopter

	project_tags = {
		sp_tag_aircraft
		sp_tag_helicopter
	}

	allowed = {
		has_dlc = "Gotterdammerung"		
	}

	available = {
	}

	breakthrough_cost = {
		specialization_air = 1
	}
	
	prototype_time = sp_time.prototype.long

	complexity = sp_complexity.medium

	project_output = {
		country_effects = {
			custom_effect_tooltip = {
				localization_key = SP_UNLOCK_TECH
				TECH = sp_helicopter_transport_pods_tech
			}
			custom_effect_tooltip = {
				localization_key = SP_UNLOCK_TECH
				TECH = sp_helicopter_artillery_observers_tech
			}
			custom_effect_tooltip = {
				localization_key = SP_UNLOCK_TECH
				TECH = sp_helicopter_med_evac_tech
			}
			mark_technology_tree_layout_dirty = yes
		}		

		enable_equipments = {
			#helicopter_equipment_1 
		}

		enable_subunits = { 
			#helicopter_brigade
		}

		#enable_equipment_modules = { #TODO_Manu: Uncomment if it gets code support. Otherwise REMOVE! 
		#	limit = {
		#		has_dlc = "Gotterdammerung"
		#	}
		#	lc_helipad #Module for Land Cruiser
		#}
	}

	empty_reward_weight = {
		base = 0.0
	}

	generic_prototype_rewards = {
		sp_air_scientist_xp_generic_reward
		sp_air_political_interference_generic_reward
		sp_air_generic_major_breakthrough_reward
		sp_air_generic_aerodynamics_advancements_reward
	}
	unique_prototype_rewards = {
	}
}
